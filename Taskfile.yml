version: '3'

vars:
  VERSION:
    sh: git describe --tags | sed -r 's/-.+//'


tasks:
  build-all:
    desc: 'Build for all platforms and architectures'
    cmds:
      - task: build-loop
        vars:
          GOOS: GOOS="linux"
          GOARCH: GOARCH="amd64"
          PLATFORM: linux-amd64
      - task: build-loop
        vars:
          GOOS: GOOS="linux"
          GOARCH: GOARCH="386"
          PLATFORM: linux-386
      - task: build-loop
        vars:
          GOOS: GOOS="darwin"
          GOARCH: GOARCH="amd64"
          PLATFORM: darwin-amd64
      - task: build-loop
        vars:
          GOOS: GOOS="darwin"
          GOARCH: GOARCH="arm64"
          PLATFORM: darwin-arm64
      - task: build-loop
        vars:
          GOOS: GOOS="freebsd"
          GOARCH: GOARCH="amd64"
          PLATFORM: freebsd-amd64
      - task: build-loop
        vars:
          GOOS: GOOS="freebsd"
          GOARCH: GOARCH="386"
          PLATFORM: freebsd-386
      - task: build-loop
        vars:
          GOOS: GOOS="windows"
          GOARCH: GOARCH="amd64"
          PLATFORM: windows-amd64
          WIN: true
      - task: build-loop
        vars:
          GOOS: GOOS="windows"
          GOARCH: GOARCH="386"
          PLATFORM: windows-386
          WIN: true
      - rm -rf temp
  build:
    desc: 'Build for the current platform'
    cmds:
      - go build .
  build-loop:
    cmds:
      - |
        rm -rf temp && mkdir temp
        {{ .GOOS }} {{ .GOARCH }} go build -ldflags="-X 'truc/cmd/version.Version={{ .VERSION }}'" -o temp/truc{{ if .WIN }}.exe{{ end }}
        cp LICENSE temp/LICENSE{{ if .WIN }}.txt{{ end }}
        cp docs/INSTALL temp/INSTALL{{ if .WIN }}.txt{{ end }}
        cd temp
        tar -czf ../truc-{{ .VERSION }}-{{ .PLATFORM }}.tar.gz .
        mv ../truc-{{ .VERSION }}-{{ .PLATFORM }}.tar.gz ../result/truc-{{ .VERSION }}-{{ .PLATFORM }}.tar.gz
